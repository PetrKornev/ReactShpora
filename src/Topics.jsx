export const topics = [
  {
    path: 'components',
    title: 'Components',
    content: [
      {
        q: 'Что такое компонента?',
      },
      {
        a: 'Это небольшие, переиспользуемые кусочки кода, которые управляют отображением и поведением пользовательского интерфейса.',
      },
      { q: 'Какими они бывают?' },
      {
        a: 'Компноненты бывают классовыми и функциональми. Функциональные компоненты — это простые функции, которые принимают props и возвращают JSX. Они являются наиболее современным и популярным способом написания компонентов.',
      },
      { a: 'Пример функционального компонента:' },
      { c: 'function Greeting() {\n return <h1>Привет!</h1>} \n}' },
      { a: 'Пример классового компонента:' },
      {
        c: 'class Greting extends Component { \n render() { \n return <h1>Привет!</h1>\n } \n }',
      },
      {
        a: 'Что бы вызвать компонент, мы должны вставить его, например в App.jsx (предварительно импортировав его), следующим образом: <Greeting/>',
      },
    ],
  },
  {
    path: 'props',
    title: 'Props',
    content: [
      { q: 'Что такое props?' },
      {
        a: 'Props — это объект, содержащий данные, которые передаются в компонент из его родителя. Props похожи на параметры функций: они предоставляют компонентам необходимую информацию для корректной работы.',
      },
      { q: 'Как передать props?' },
      {
        a: 'Props передаются в компоненты так же, как атрибуты в HTML-элементы. Пример:',
      },
      {
        c: 'function welcome(props) { \n return <h1>Welcome, {props.userName}!</h1> \n } \n\n <Welcome userName={"Petr"} />',
      },
    ],
  },
  {
    path: 'state',
    title: 'State',
    content: [
      { q: 'Что такое State?' },
      {
        a: 'State (состояние) в React — это место, где компонент хранит свои динамические данные',
      },
      {
        q: 'Что такое useState?',
      },
      {
        a: 'Хук. Он возвращает массив из двух элементов: state - текущее значение состояния и setState - функцию для его обновления',
      },
    ],
  },
];
